Terminals unused in grammar

   SEMI
   FLOAT


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmt: STRING DOT STRING LPAR args RPAR
    3     | STRING ASSIGN expr
    4     | LPAR STRING argnames RPAR ARROW LBRACE stmts RBRACE
    5     | IF LPAR expr RPAR LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE
    6     | PRINT STRINGLIT LPAR args RPAR

    7 stmts: stmt
    8      | stmts stmt

    9 args: %empty
   10     | expr
   11     | args COMMA expr

   12 argnames: %empty
   13         | COLON STRING
   14         | argnames COMMA STRING

   15 expr: LPAR expr RPAR
   16     | INT
   17     | STRING
   18     | expr PLUS expr
   19     | expr MINUS expr
   20     | expr TIMES expr
   21     | expr DIV expr
   22     | expr MOD expr
   23     | expr EQ expr
   24     | expr NEQ expr
   25     | expr LT expr
   26     | expr LTEQ expr
   27     | expr GT expr
   28     | expr GTEQ expr
   29     | expr AND expr
   30     | expr OR expr


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAR (258) 2 4 5 6 15
RPAR (259) 2 4 5 6 15
DOT (260) 2
COMMA (261) 11 14
ASSIGN (262) 3
ARROW (263) 4
LBRACE (264) 4 5
RBRACE (265) 4 5
COLON (266) 13
SEMI (267)
PLUS (268) 18
MINUS (269) 19
TIMES (270) 20
DIV (271) 21
MOD (272) 22
EQ (273) 23
NEQ (274) 24
LT (275) 25
LTEQ (276) 26
GT (277) 27
GTEQ (278) 28
AND (279) 29
OR (280) 30
IF (281) 5
ELSE (282) 5
PRINT (283) 6
INT (284) 16
FLOAT (285)
STRING (286) 2 3 4 13 14 17
STRINGLIT (287) 6


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
stmt (35)
    on left: 2 3 4 5 6, on right: 7 8
stmts (36)
    on left: 7 8, on right: 1 4 5 8
args (37)
    on left: 9 10 11, on right: 2 6 11
argnames (38)
    on left: 12 13 14, on right: 4 14
expr (39)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30, on right:
    3 5 10 11 15 18 19 20 21 22 23 24 25 26 27 28 29 30


State 0

    0 $accept: . program $end

    LPAR    shift, and go to state 1
    IF      shift, and go to state 2
    PRINT   shift, and go to state 3
    STRING  shift, and go to state 4

    program  go to state 5
    stmt     go to state 6
    stmts    go to state 7


State 1

    4 stmt: LPAR . STRING argnames RPAR ARROW LBRACE stmts RBRACE

    STRING  shift, and go to state 8


State 2

    5 stmt: IF . LPAR expr RPAR LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    LPAR  shift, and go to state 9


State 3

    6 stmt: PRINT . STRINGLIT LPAR args RPAR

    STRINGLIT  shift, and go to state 10


State 4

    2 stmt: STRING . DOT STRING LPAR args RPAR
    3     | STRING . ASSIGN expr

    DOT     shift, and go to state 11
    ASSIGN  shift, and go to state 12


State 5

    0 $accept: program . $end

    $end  shift, and go to state 13


State 6

    7 stmts: stmt .

    $default  reduce using rule 7 (stmts)


State 7

    1 program: stmts .
    8 stmts: stmts . stmt

    LPAR    shift, and go to state 1
    IF      shift, and go to state 2
    PRINT   shift, and go to state 3
    STRING  shift, and go to state 4

    $default  reduce using rule 1 (program)

    stmt  go to state 14


State 8

    4 stmt: LPAR STRING . argnames RPAR ARROW LBRACE stmts RBRACE

    COLON  shift, and go to state 15

    $default  reduce using rule 12 (argnames)

    argnames  go to state 16


State 9

    5 stmt: IF LPAR . expr RPAR LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 20


State 10

    6 stmt: PRINT STRINGLIT . LPAR args RPAR

    LPAR  shift, and go to state 21


State 11

    2 stmt: STRING DOT . STRING LPAR args RPAR

    STRING  shift, and go to state 22


State 12

    3 stmt: STRING ASSIGN . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 23


State 13

    0 $accept: program $end .

    $default  accept


State 14

    8 stmts: stmts stmt .

    $default  reduce using rule 8 (stmts)


State 15

   13 argnames: COLON . STRING

    STRING  shift, and go to state 24


State 16

    4 stmt: LPAR STRING argnames . RPAR ARROW LBRACE stmts RBRACE
   14 argnames: argnames . COMMA STRING

    RPAR   shift, and go to state 25
    COMMA  shift, and go to state 26


State 17

   15 expr: LPAR . expr RPAR

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 27


State 18

   16 expr: INT .

    $default  reduce using rule 16 (expr)


State 19

   17 expr: STRING .

    $default  reduce using rule 17 (expr)


State 20

    5 stmt: IF LPAR expr . RPAR LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    RPAR   shift, and go to state 28
    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33
    EQ     shift, and go to state 34
    NEQ    shift, and go to state 35
    LT     shift, and go to state 36
    LTEQ   shift, and go to state 37
    GT     shift, and go to state 38
    GTEQ   shift, and go to state 39
    AND    shift, and go to state 40
    OR     shift, and go to state 41


State 21

    6 stmt: PRINT STRINGLIT LPAR . args RPAR

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    $default  reduce using rule 9 (args)

    args  go to state 42
    expr  go to state 43


State 22

    2 stmt: STRING DOT STRING . LPAR args RPAR

    LPAR  shift, and go to state 44


State 23

    3 stmt: STRING ASSIGN expr .
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33
    EQ     shift, and go to state 34
    NEQ    shift, and go to state 35
    LT     shift, and go to state 36
    LTEQ   shift, and go to state 37
    GT     shift, and go to state 38
    GTEQ   shift, and go to state 39
    AND    shift, and go to state 40
    OR     shift, and go to state 41

    $default  reduce using rule 3 (stmt)


State 24

   13 argnames: COLON STRING .

    $default  reduce using rule 13 (argnames)


State 25

    4 stmt: LPAR STRING argnames RPAR . ARROW LBRACE stmts RBRACE

    ARROW  shift, and go to state 45


State 26

   14 argnames: argnames COMMA . STRING

    STRING  shift, and go to state 46


State 27

   15 expr: LPAR expr . RPAR
   18     | expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    RPAR   shift, and go to state 47
    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33
    EQ     shift, and go to state 34
    NEQ    shift, and go to state 35
    LT     shift, and go to state 36
    LTEQ   shift, and go to state 37
    GT     shift, and go to state 38
    GTEQ   shift, and go to state 39
    AND    shift, and go to state 40
    OR     shift, and go to state 41


State 28

    5 stmt: IF LPAR expr RPAR . LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE

    LBRACE  shift, and go to state 48


State 29

   18 expr: expr PLUS . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 49


State 30

   19 expr: expr MINUS . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 50


State 31

   20 expr: expr TIMES . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 51


State 32

   21 expr: expr DIV . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 52


State 33

   22 expr: expr MOD . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 53


State 34

   23 expr: expr EQ . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 54


State 35

   24 expr: expr NEQ . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 55


State 36

   25 expr: expr LT . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 56


State 37

   26 expr: expr LTEQ . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 57


State 38

   27 expr: expr GT . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 58


State 39

   28 expr: expr GTEQ . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 59


State 40

   29 expr: expr AND . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 60


State 41

   30 expr: expr OR . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 61


State 42

    6 stmt: PRINT STRINGLIT LPAR args . RPAR
   11 args: args . COMMA expr

    RPAR   shift, and go to state 62
    COMMA  shift, and go to state 63


State 43

   10 args: expr .
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33
    EQ     shift, and go to state 34
    NEQ    shift, and go to state 35
    LT     shift, and go to state 36
    LTEQ   shift, and go to state 37
    GT     shift, and go to state 38
    GTEQ   shift, and go to state 39
    AND    shift, and go to state 40
    OR     shift, and go to state 41

    $default  reduce using rule 10 (args)


State 44

    2 stmt: STRING DOT STRING LPAR . args RPAR

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    $default  reduce using rule 9 (args)

    args  go to state 64
    expr  go to state 43


State 45

    4 stmt: LPAR STRING argnames RPAR ARROW . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 65


State 46

   14 argnames: argnames COMMA STRING .

    $default  reduce using rule 14 (argnames)


State 47

   15 expr: LPAR expr RPAR .

    $default  reduce using rule 15 (expr)


State 48

    5 stmt: IF LPAR expr RPAR LBRACE . stmts RBRACE ELSE LBRACE stmts RBRACE

    LPAR    shift, and go to state 1
    IF      shift, and go to state 2
    PRINT   shift, and go to state 3
    STRING  shift, and go to state 4

    stmt   go to state 6
    stmts  go to state 66


State 49

   18 expr: expr . PLUS expr
   18     | expr PLUS expr .
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33

    $default  reduce using rule 18 (expr)


State 50

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   19     | expr MINUS expr .
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33

    $default  reduce using rule 19 (expr)


State 51

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   20     | expr TIMES expr .
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 52

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   21     | expr DIV expr .
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 53

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   22     | expr MOD expr .
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 22 (expr)


State 54

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   23     | expr EQ expr .
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33
    LT     shift, and go to state 36
    LTEQ   shift, and go to state 37
    GT     shift, and go to state 38
    GTEQ   shift, and go to state 39

    $default  reduce using rule 23 (expr)


State 55

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   24     | expr NEQ expr .
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33
    LT     shift, and go to state 36
    LTEQ   shift, and go to state 37
    GT     shift, and go to state 38
    GTEQ   shift, and go to state 39

    $default  reduce using rule 24 (expr)


State 56

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   25     | expr LT expr .
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33

    LT    error (nonassociative)
    LTEQ  error (nonassociative)
    GT    error (nonassociative)
    GTEQ  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 57

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   26     | expr LTEQ expr .
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33

    LT    error (nonassociative)
    LTEQ  error (nonassociative)
    GT    error (nonassociative)
    GTEQ  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 58

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   27     | expr GT expr .
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33

    LT    error (nonassociative)
    LTEQ  error (nonassociative)
    GT    error (nonassociative)
    GTEQ  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 59

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   28     | expr GTEQ expr .
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33

    LT    error (nonassociative)
    LTEQ  error (nonassociative)
    GT    error (nonassociative)
    GTEQ  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 60

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   29     | expr AND expr .
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33
    EQ     shift, and go to state 34
    NEQ    shift, and go to state 35
    LT     shift, and go to state 36
    LTEQ   shift, and go to state 37
    GT     shift, and go to state 38
    GTEQ   shift, and go to state 39

    $default  reduce using rule 29 (expr)


State 61

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr
   30     | expr OR expr .

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33
    EQ     shift, and go to state 34
    NEQ    shift, and go to state 35
    LT     shift, and go to state 36
    LTEQ   shift, and go to state 37
    GT     shift, and go to state 38
    GTEQ   shift, and go to state 39
    AND    shift, and go to state 40

    $default  reduce using rule 30 (expr)


State 62

    6 stmt: PRINT STRINGLIT LPAR args RPAR .

    $default  reduce using rule 6 (stmt)


State 63

   11 args: args COMMA . expr

    LPAR    shift, and go to state 17
    INT     shift, and go to state 18
    STRING  shift, and go to state 19

    expr  go to state 67


State 64

    2 stmt: STRING DOT STRING LPAR args . RPAR
   11 args: args . COMMA expr

    RPAR   shift, and go to state 68
    COMMA  shift, and go to state 63


State 65

    4 stmt: LPAR STRING argnames RPAR ARROW LBRACE . stmts RBRACE

    LPAR    shift, and go to state 1
    IF      shift, and go to state 2
    PRINT   shift, and go to state 3
    STRING  shift, and go to state 4

    stmt   go to state 6
    stmts  go to state 69


State 66

    5 stmt: IF LPAR expr RPAR LBRACE stmts . RBRACE ELSE LBRACE stmts RBRACE
    8 stmts: stmts . stmt

    LPAR    shift, and go to state 1
    RBRACE  shift, and go to state 70
    IF      shift, and go to state 2
    PRINT   shift, and go to state 3
    STRING  shift, and go to state 4

    stmt  go to state 14


State 67

   11 args: args COMMA expr .
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . TIMES expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | expr . EQ expr
   24     | expr . NEQ expr
   25     | expr . LT expr
   26     | expr . LTEQ expr
   27     | expr . GT expr
   28     | expr . GTEQ expr
   29     | expr . AND expr
   30     | expr . OR expr

    PLUS   shift, and go to state 29
    MINUS  shift, and go to state 30
    TIMES  shift, and go to state 31
    DIV    shift, and go to state 32
    MOD    shift, and go to state 33
    EQ     shift, and go to state 34
    NEQ    shift, and go to state 35
    LT     shift, and go to state 36
    LTEQ   shift, and go to state 37
    GT     shift, and go to state 38
    GTEQ   shift, and go to state 39
    AND    shift, and go to state 40
    OR     shift, and go to state 41

    $default  reduce using rule 11 (args)


State 68

    2 stmt: STRING DOT STRING LPAR args RPAR .

    $default  reduce using rule 2 (stmt)


State 69

    4 stmt: LPAR STRING argnames RPAR ARROW LBRACE stmts . RBRACE
    8 stmts: stmts . stmt

    LPAR    shift, and go to state 1
    RBRACE  shift, and go to state 71
    IF      shift, and go to state 2
    PRINT   shift, and go to state 3
    STRING  shift, and go to state 4

    stmt  go to state 14


State 70

    5 stmt: IF LPAR expr RPAR LBRACE stmts RBRACE . ELSE LBRACE stmts RBRACE

    ELSE  shift, and go to state 72


State 71

    4 stmt: LPAR STRING argnames RPAR ARROW LBRACE stmts RBRACE .

    $default  reduce using rule 4 (stmt)


State 72

    5 stmt: IF LPAR expr RPAR LBRACE stmts RBRACE ELSE . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 73


State 73

    5 stmt: IF LPAR expr RPAR LBRACE stmts RBRACE ELSE LBRACE . stmts RBRACE

    LPAR    shift, and go to state 1
    IF      shift, and go to state 2
    PRINT   shift, and go to state 3
    STRING  shift, and go to state 4

    stmt   go to state 6
    stmts  go to state 74


State 74

    5 stmt: IF LPAR expr RPAR LBRACE stmts RBRACE ELSE LBRACE stmts . RBRACE
    8 stmts: stmts . stmt

    LPAR    shift, and go to state 1
    RBRACE  shift, and go to state 75
    IF      shift, and go to state 2
    PRINT   shift, and go to state 3
    STRING  shift, and go to state 4

    stmt  go to state 14


State 75

    5 stmt: IF LPAR expr RPAR LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE .

    $default  reduce using rule 5 (stmt)
